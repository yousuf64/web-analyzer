include:
  - docker-compose.infra.yml

services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: web-analyzer-app
    ports:
      - "3000:80" # Expose the frontend at http://localhost:3000
    restart: unless-stopped
    networks:
      - web-analyzer
    depends_on:
      - api

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: web-analyzer-api
    ports:
      - "8080:8080" # HTTP port
      - "9090:9090" # Metrics port
    environment:
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - NATS_URL=nats://nats:4222
      - ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - dynamodb-local
      - nats
      - zipkin
      - analyzer
    restart: unless-stopped
    networks:
      - web-analyzer

  analyzer:
    build:
      context: .
      dockerfile: analyzer/Dockerfile
    container_name: web-analyzer-analyzer
    ports:
      - "9091:9091" # Metrics port
    environment:
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - NATS_URL=nats://nats:4222
      - ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - dynamodb-local
      - nats
      - zipkin
    restart: unless-stopped
    networks:
      - web-analyzer

  notifications:
    build:
      context: .
      dockerfile: notifications/Dockerfile
    container_name: web-analyzer-notifications
    ports:
      - "8081:8081" # HTTP port
      - "9092:9092" # Metrics port
    environment:
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - NATS_URL=nats://nats:4222
      - ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans
    depends_on:
      - dynamodb-local
      - nats
      - zipkin
    restart: unless-stopped
    networks:
      - web-analyzer